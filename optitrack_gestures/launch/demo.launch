<!-- --> 
<launch>

  	<node name="soundplay_node" pkg="sound_play" type="soundplay_node.py"/>

	<node name="detect_object_node" pkg="visual_object_detector" type="detector_node.py" output="screen">
		<remap from="input_image"  to="/ardrone/image_raw"/>
	</node>

	<node name="drone_feedback_signals_node" pkg="drone_feedback_signals" type="feedback_signals_node" output="screen">
		<remap from="demo_node_topic"  to="/demo"/>
		<remap from="output_sound"  to="/robotsound"/>		
		<param name="emergency_sound" value="$(find drone_feedback_signals)/sounds/emergency.wav"/>
		<param name="landed_sound" value="$(find drone_feedback_signals)/sounds/landed.wav"/>
		<param name="hovering_sound" value="$(find drone_feedback_signals)/sounds/hovering.wav"/>
		<param name="following_sound" value="$(find drone_feedback_signals)/sounds/following.wav"/>
		<param name="mission_sound" value="$(find drone_feedback_signals)/sounds/mission.wav"/>
	</node>

	
	<node name="leader_selector" pkg="drone_following_leader" type="leader_selector_node" output="screen">
		<remap from="rigied_bodies_topic"  to="/optitrack/rigid_bodies"/>
		<remap from="leader_info_topic"  to="/leader_info_topic"/>
		<param name="leader_id" value="2"/>
	</node>

	<node name="gestures_node" pkg="optitrack_gestures" type="optitrack_gestures_demo" output="screen">
		<remap from="marker_leader_1_pose_topic"  to="/optitrack/gesture_marker_1"/>
		<remap from="marker_leader_2_pose_topic"  to="/optitrack/gesture_marker_2"/>
		<remap from="drone_control_topic"  to="/drone_control_info"/>
		<remap from="leader_pose_topic"  to="/leader_info_topic"/>
		<remap from="demo_info_topic"  to="/demo"/>
		<rosparam>leaders_heights: [1.78, 1.80]</rosparam>	
		<rosparam>leaders_id: [2, 3]</rosparam>	
		<rosparam>mission_target: [-1.25, 0.0, 1.0, 180]</rosparam> <!-- [x + dposeX, y + dposeY ,z + dPosez ,yaw(degrees)] -->
	</node>

	<node name="drone_target_points" pkg="drone_following_leader" type="leader_desired_position_node" output="screen">
		<remap from="leader_info_topic"  to="/leader_info_topic"/>
		<remap from="desired_leader_position_topic"  to="/drone_target_points"/>
		<remap from="drone_control_topic"  to="/drone_control_info"/>
		<remap from="demo_node_topic"  to="/demo"/>
		<rosparam>initial_pose: [0.0, 0.0, 1.0, 0.0]</rosparam> <!-- [x + dposeX, y + dposeY ,z + dPosez ,yaw (degrees)] -->
	</node>

	<node name="drone_control_node" pkg="drone_control_position" type="control_drone_position_node" output="screen">
		<remap from="drone_info_topic"  to="/optitrack/drone"/>
		<remap from="control_info"  to="/drone_target_points"/>
		<rosparam>Kd: [0.35, 0.35]</rosparam>  <!-- [pitch, roll] -->  <!-- 0.25 0.25 -->
		<rosparam>Kp: [0.2, 0.2,  0.5, 0.0325]</rosparam>  <!-- [pitch, roll, altitude, yaw] --><!-- 0.25 0.25 0.5 0.0125-->
		<rosparam>velocity_limit: [0.15, 0.15, 1.0, 1.0]</rosparam>  <!-- [pitch, roll, altitude, yaw] -->
		<rosparam>delta_pose: [-1.5, 0.0, 0.0, 0.0]</rosparam>  <!-- [x,y,z,yaw (degrees)] -->
		<rosparam>virtual_fence: [3.0, -1.8, 2.5, -2.4, 2.25]</rosparam>  <!-- [maxX, minX, maxY, minY, maxAltitude] -->
	
	</node>

</launch>
